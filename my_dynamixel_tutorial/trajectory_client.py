#!/usr/bin/env python
import roslib
roslib.load_manifest('my_dynamixel_tutorial')

import rospy
import actionlib
from std_msgs.msg import Float64
import trajectory_msgs.msg 
import control_msgs.msg  
from trajectory_msgs.msg import JointTrajectoryPoint
from control_msgs.msg import JointTrajectoryAction, JointTrajectoryGoal, FollowJointTrajectoryAction, FollowJointTrajectoryGoal

duration = 0.6

class Joint:
        def __init__(self, motor_name):
            #arm_name should be b_arm or f_arm
            	self.name = motor_name   
		print(motor_name)        
		self.jta = actionlib.SimpleActionClient('/'+self.name+'_controller/follow_joint_trajectory', FollowJointTrajectoryAction)
		rospy.loginfo('Waiting for joint trajectory action')
		self.jta.wait_for_server()
		rospy.loginfo('Found joint trajectory action!')

            
        def move_joint(self, angles):
            goal = FollowJointTrajectoryGoal()                  
            char = self.name[0] #either 'f' or 'b'
            goal.trajectory.joint_names = ['motor8', 'motor9','motor10','motor11','motor12','motor13','motor14','motor15','motor16','motor17']
            point = JointTrajectoryPoint()
            point.positions = angles
            point.time_from_start = rospy.Duration(duration)              
            goal.trajectory.points.append(point)
            self.jta.send_goal_and_wait(goal)
              

def main():
		arm = Joint('f_arm')
		arm.move_joint([3.060291671831854,2.6491848206785025,3.5419616392279454,0.320601984668099,-2.1475731030398975,2.7596314374062683,0.3021942152134713,3.5465635815916023,2.457437222192797,3.083301383650139])
		arm.move_joint([2.9391071895888885,2.66759259013313,3.5634373702583444,0.2975922728498144,-2.1705828148581823,2.5494760694659355,0.35434956200158313,3.1998839235294474,2.4436313951018263,2.8608741694067206])
		arm.move_joint([2.7811071684366673,2.6645246285573587,3.54042765844006 ,0.4908738521234052,-2.1644468917066395,2.497320722677824,0.6621165841238575,3.1922140195900193,2.3623304133438876,2.662990647769473])
		arm.move_joint([2.7242333797699252,2.672194532496787,3.5327577545006315,0.5384272565478601,-2.167514853282411,2.12899058431281,0.7167185264875144,2.8624081501946064,2.2585245862529167,2.949615546190614])
		arm.move_joint([2.78724309158821,2.8501363038915213,3.9177869322599275,0.5445631796994026,-2.158310968555097,2.457437222192797,0.5967185264875144,3.1692043077717345,2.531068300011308,2.813320764982266])
		arm.move_joint([3.0127382674073995,2.9145634969827183,4.01902966426038 ,0.2837864457588436,-2.1537090261914402,2.514194511344566,0.2715145994557585,3.232097520075046,2.5418061655265074,3.038815940801455])
		arm.move_joint([3.1277868264988222 ,	2.9805246708618007, 	3.6754179677739964 ,	0.22242721424341796 ,	-2.1475731030398975, 	2.1705828148581823, 	0.19941750242513334 ,	2.8332625152247792 ,	2.067806102069844 ,	3.1738062501353914])
		arm.move_joint([3.246252845710937 ,	2.971320786134487 ,	3.693825737228624 ,	0.10584467436410924 	,-2.1613789301308683, 	2.3178449704952038 ,	0.34974761963792617 ,	2.756563475830497 ,	2.03405852473636 ,	3.402194638257892])
		arm.move_joint([3.463728619045778 ,	2.791845033951867 ,	3.9760782021995817 	,0.10891263593988053 	,-2.119961448857956 	,2.8240586304974653 ,	0.13959225169759334 ,	3.143126634377679 	,2.141437179888355 	,3.4345829840759508])
		duration = 1
		arm.move_joint([3.060291671831854,2.6491848206785025,3.5419616392279454,0.320601984668099,-2.1475731030398975,2.7596314374062683,0.3021942152134713,3.5465635815916023,2.457437222192797,3.083301383650139])

		#3.184544115650591 	2.8670100925582633 	3.6600781598951397 	0.09970875121256667 	-2.1138255257064134 	2.7335537640122127 	0.1119805975156518 	3.8748354701991294 	2.5816896660115343 	3.1523305191049924	
		#3.1968159619536762 	2.8716120349219203 	3.805806334744276 	0.09203884727313846 	-2.1260973720094984 	2.78724309158821 	0.05829126993965436 	3.7766606997744487 	2.5571459734053636 	3.198349942741562
		#3.3272043289239557 	2.890019804376548 	4.2031073588066565 	0.10584467436410924 	-1.8331070415233413 	2.851670284679407 	0.20248546400090464 	3.2765829629237295 	2.287165354737491 	3.347146079166469
		#3.1277868264988222 	2.9636508821950587 	3.5833791205008576 	0.0966407896367954 	-2.1521750454035544 	2.265689623707092 	0.0674951546669682 	3.098641191528995 	2.1521750454035544 	3.150796538317107
		#3.1277868264988222 	2.9805246708618007 	3.6754179677739964 	0.22242721424341796 	-2.1475731030398975 	2.1705828148581823 	0.19941750242513334 	2.8332625152247792 	2.067806102069844 	3.1738062501353914

		#arm.move_joint([3.1738062501353914,2.819456688133808,4.362641360746763,0.11504855909142309,-1.8607186957052828,2.8240586304974653,0.17640779060684875,3.175340230923277,2.2196702000705226,3.3456120983785835])

		#arm.move_joint([3.3364082136512696,2.8823499004371196,3.761320891895592,0.11817477042468103,-2.1736507764339534,2.851670284679407,0.19934954084936207,3.856427700744502,2.662990647769473,3.3885635604393816])
		#arm.move_joint([3.397767445166695,2.8271265920732365,4.0987966652304335,0.15493205957644976,-2.1659808724945253,2.791845033951867,0.18867963690993386,2.9621169014071733,2.124563391221613,3.5036121195308043])
#		arm.move_joint([3.2704470397721868,2.90689359304329,3.83955391207776,0.10891263593988053,-1.9926410434634478,2.805650861042838,0.09817477042468103,3.9346607209266695,2.6016314162540475,3.3486800599543547])
		





		#arm.move_joint([2.7335537640122127,2.689068321163529,3.5128160042581182,0.5445631796994026,-2.1644468917066395,2.1613789301308683,0.6212622190936846,2.8716120349219203,2.2672236044949776,2.945243112740431])
		#arm.move_joint([2.8194566881338083,2.655320743830045,3.5680393126220014,0.36815538909255385,-2.1705828148581823,2.6031653970419,333,0.43718452454740775,3.3364082136512696,2.4436313951018263,2.8654761117703775])
		#arm.move_joint([2.81670284679407,2.6537867630421594,3.6171266978343417,0.48473792897186263,-2.1429711606762405,2.7596314374062683,0.4724660826687775,3.523553869773318,2.480446934011082,2.8976897083159763])
		#arm.move_joint([2.7811071684366673,2.662990647769473,3.5971849475918285,0.5123495831538042,-2.1705828148581823,2.771903283709354,0.5246214294568893,3.5036121195308043,2.4896508187383954,2.8286605728611223])
	#while(1):
	#arm.move_joint([0])
        # motor no.      8   9    10   11    12   13   14   15   16   17
		# arm.move_joint([3.10,2.49,3.41,0.22,-2.30,2.88,0.30,3.67,2.60,3.01])
		# arm.move_joint([3.25,2.49,3.41,0.22,-2.30,2.88,0.30,3.67,2.60,3.24])
		# arm.move_joint([3.25,2.60,3.95,0.03,-1.48,2.88,0.32,3.67,2.60,3.24])
		
		# ##arm.move_joint([3.20,2.60,3.95,0.22,-2.40,2.88,0.35,3.67,2.60,3.24]).36
		
		# arm.move_joint([3.20,2.64,3.90,0.03,-1.52,2.79,0.08,3.78,2.56,3.25])
		# arm.move_joint([3.09,2.64,3.85,0.21,-1.40,2.80,0.25,3.85,2.58,3.14])
		# arm.move_joint([2.90,2.64,3.85,0.21,-1.40,2.80,0.25,3.85,2.58,2.88])

		# #abhay
		# arm.move_joint([2.80,2.64,3.85,0.21,-1.40,2.50,0.45,3.85,2.58,2.83])
		# arm.move_joint([2.70,2.64,3.85,0.21,-1.40,2.50,0.45,3.85,2.88,2.78])
		# arm.move_joint([2.70,2.64,3.85,0.21,-1.40,2.30,0.45,3.85,2.88,2.78])



print("Hello1")

                        
if __name__ == '__main__':
	rospy.init_node('trajectory_client')
	main()
	print("Hello")

