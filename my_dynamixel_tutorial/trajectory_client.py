#!/usr/bin/env python
import roslib
roslib.load_manifest('my_dynamixel_tutorial')

import rospy
import actionlib
from std_msgs.msg import Float64
import trajectory_msgs.msg 
import control_msgs.msg  
from trajectory_msgs.msg import JointTrajectoryPoint
from control_msgs.msg import JointTrajectoryAction, JointTrajectoryGoal, FollowJointTrajectoryAction, FollowJointTrajectoryGoal

duration = 0.6

class Joint:
        def __init__(self, motor_name):
            #arm_name should be b_arm or f_arm
            	self.name = motor_name   
		print(motor_name)        
		self.jta = actionlib.SimpleActionClient('/'+self.name+'_controller/follow_joint_trajectory', FollowJointTrajectoryAction)
		rospy.loginfo('Waiting for joint trajectory action')
		self.jta.wait_for_server()
		rospy.loginfo('Found joint trajectory action!')

            
        def move_joint(self, angles):
            goal = FollowJointTrajectoryGoal()                  
            char = self.name[0] #either 'f' or 'b'
            goal.trajectory.joint_names = ['motor8', 'motor9','motor10','motor11','motor12','motor13','motor14','motor15','motor16','motor17']
            point = JointTrajectoryPoint()
            point.positions = angles
            point.time_from_start = rospy.Duration(duration)              
            goal.trajectory.points.append(point)
            self.jta.send_goal_and_wait(goal)
              

def main():
	arm = Joint('f_arm')
	for x in range(0,3):
		arm.move_joint([3.060291671831854,2.6491848206785025,3.5419616392279454,0.320601984668099,-2.1475731030398975,2.7596314374062683,0.3021942152134713,3.5465635815916023,2.457437222192797,3.083301383650139])
		arm.move_joint([2.9391071895888885,2.66759259013313,3.5634373702583444,0.2975922728498144,-2.1705828148581823,2.5494760694659355,0.35434956200158313,3.1998839235294474,2.4436313951018263,2.8608741694067206])
		arm.move_joint([2.7811071684366673,2.6645246285573587,3.54042765844006 ,0.4908738521234052,-2.1644468917066395,2.497320722677824,0.6621165841238575,3.1922140195900193,2.3623304133438876,2.662990647769473])
		arm.move_joint([2.7242333797699252,2.672194532496787,3.5327577545006315,0.5384272565478601,-2.167514853282411,2.12899058431281,0.7167185264875144,2.8624081501946064,2.2585245862529167,2.949615546190614])
		arm.move_joint([2.78724309158821,2.8501363038915213,3.9177869322599275,0.5445631796994026,-2.158310968555097,2.457437222192797,0.5967185264875144,3.1692043077717345,2.531068300011308,2.813320764982266])
		arm.move_joint([3.0127382674073995,2.9145634969827183,4.01902966426038 ,0.2837864457588436,-2.1537090261914402,2.514194511344566,0.2715145994557585,3.232097520075046,2.5418061655265074,3.038815940801455])
		arm.move_joint([3.0464858447408836,2.9989324403164286,3.8748354701991294,0.15493205957644976,-2.1567769877672114,2.742757648739526,0.10277671278833796,3.7597869111077067,2.5862916083751912,3.095573229953224])
		arm.move_joint([3.2597091742569875,2.9253013624979176,3.6386024288647407,0.1536896448593132,-2.167514853282411,2.5709518004963345,0.2561747915769021,3.377825694924182,2.1475731030398975,3.3164664634087564])
		arm.move_joint([3.060291671831854,2.6491848206785025,3.5419616392279454,0.320601984668099,-2.1475731030398975,2.7596314374062683,0.3021942152134713,3.5465635815916023,2.457437222192797,3.083301383650139])

		#arm.move_joint([3.2597091742569875, 	2.9253013624979176, 	3.6386024288647407, 	0.24236896448593132, 	-2.167514853282411, 	2.5709518004963345, 	0.2561747915769021, 	3.377825694924182, 	2.1475731030398975, 	3.3164664634087564])
		#arm.move_joint([2.9099615546190614, 	2.9038256314675186, 	3.4944082348034904, 	0.44485442848683593, 	-2.1475731030398975, 	2.5494760694659355, 	0.5031456984264903, 	3.2949907323783574, 	2.0969517370396713, 	3.3011266555298997])
		#arm.move_joint([3.060291671831854,2.6491848206785025,3.5419616392279454,0.320601984668099,-2.1475731030398975,2.7596314374062683,0.3021942152134713,3.5465635815916023,2.457437222192797,3.083301383650139])
		#arm.move_joint([3.060291671831854,2.6491848206785025,3.5419616392279454,0.320601984668099,-2.1475731030398975,2.7596314374062683,0.3021942152134713,3.5465635815916023,2.457437222192797,3.083301383650139])




print("Hello1")

                        
if __name__ == '__main__':
	rospy.init_node('trajectory_client')
	main()
	print("Hello")

